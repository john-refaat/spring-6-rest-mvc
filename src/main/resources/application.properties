logging.level.guru.springframework=DEBUG
spring.profiles.active=localmysql
spring.flyway.enabled=false

spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:beerdb

logging.level.org.zalando.logbook=trace

server.port=8081

management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true

spring.cache.cache-names=beerCache,beerListCache,customerCache,customerListCache

spring.kafka.consumer.group-id=sfg
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


spring.threads.virtual.enabled=false
# without virtual threads - 342.6 MB
# with virtual threads - 349.8 MB


#spring.security.user.name=restadmin
#spring.security.user.password=password
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000

# Generate Schema from Entities
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata